#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('PokerGame.py'): {210L: (0,
        None,
        1,
        0)}}
debug.show-args-dialog = {loc('../../JavaProjects/Jeopardy!/Algorithms.py'): False,
                          loc('../../JavaProjects/Jeopardy!/Playground.py'): False,
                          loc('../../JavaProjects/Jeopardy!/PokerGame.py'): False,
                          loc('../../JavaProjects/Jeopardy!/Question.java'): False,
                          loc('../../JavaProjects/Jeopardy!/Wordle.py'): False,
                          loc('../AnagramDict.py'): False,
                          loc('../CodifyWord.py'): False,
                          loc('../DecodifyWord.py'): False,
                          loc('../Hebrew/Migrash_Mishchakim.py'): False,
                          loc('../Hebrew/Reading.py'): False,
                          loc('../Hebrew/Reading_Writing.py'): False,
                          loc('../ImageManipulation.py'): False,
                          loc('../MarchMadnessGenerator.py'): False,
                          loc('../Playground.py'): False,
                          loc('../Poker Probability Calculator/CalcDatabaseBuilder.py'): False,
                          loc('../Poker Probability Calculator/Card.py'): False,
                          loc('../Poker Probability Calculator/Player.py'): False,
                          loc('../Poker Probability Calculator/Playground.py'): False,
                          loc('../Poker Probability Calculator/Poker.py'): False,
                          loc('../Poker Probability Calculator/PokerCalculator.py'): False,
                          loc('../Poker Probability Calculator/PokerGame.py'): False,
                          loc('../Poker Probability Calculator/PokerSimulator.py'): False,
                          loc('../Poker Probability Calculator/PokerSimulatorTest.py'): False,
                          loc('Playground.py'): False,
                          loc('Poker.py'): False,
                          loc('../Python Spotify/Music_Player.py'): False,
                          loc('../Python Spotify/Spotify_Player.py'): False,
                          loc('../RedditBot.py'): False,
                          loc('../ReverseWordle/CPU.py'): False,
                          loc('../ReverseWordle/Playground.py'): False,
                          loc('../ReverseWordle/ReverseWordle.py'): False,
                          loc('../SQL3_Notes.py'): False,
                          loc('../SQL_Terminal.py'): False,
                          loc('../SalaryCalculator.py'): False,
                          loc('../Scrollbar.py'): False,
                          loc('../StringOrders.py'): False,
                          loc('../TkinterNotes/ImageApp.py'): False,
                          loc('../TkinterNotes/Notes_Tkinter.py'): False,
                          loc('../TkinterNotes/RedditBot_Tkinter.py'): False,
                          loc('../Wordle.py'): False,
                          loc('../countries.py'): False,
                          loc('../myJokes.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'IdR9cTYlDBICmtO9TCSs4hNJDs'\
        'l6vpTr',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../MarchMadnessGenerator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../MarchMadnessGenerator.py'),
                      'c')]},
        loc('Card.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('class def',
                                       loc('Card.py'),
                                       'Card')]},
        loc('Player.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('class def',
        loc('Player.py'),
        'Player')]},
        loc('Playground.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': [('generic attribute',
        loc('Playground.py'),
        'number')]},
        loc('Poker.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('function def',
        loc('Poker.py'),
        'check')]},
        loc('PokerCalculator.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('PokerCalculator.py'),
        'areEqual')]},
        loc('PokerGame.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('class def',
        loc('PokerGame.py'),
        'Game')]},
        loc('../ReverseWordle/CPU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../ReverseWordle/CPU.py'),
                      'clearMemory')]},
        loc('../ReverseWordle/Fact.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../ReverseWordle/Fact.py'),
                      'Fact')]},
        loc('../ReverseWordle/Playground.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ReverseWordle/Playground.py'),
                      'factbook')]},
        loc('../ReverseWordle/ReverseWordle.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../ReverseWordle/ReverseWordle.py'),
                      'a')]},
        loc('../StringOrders.py'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': [('function def',
        loc('../StringOrders.py'),
        'allOrders')]},
        loc('../TkinterNotes/ImageApp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../TkinterNotes/ImageApp.py'),
                      'back')]},
        loc('../Wordle.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('../Wordle.py'),
        'a')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'limp_button',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'toString(',
                                       'fReverse': False,
                                       'fSearchText': u'self.poss',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 164L,
                       'selection_end': 164L,
                       'selection_start': 164L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../ReverseWordle/ReverseWordle.py'),
        {'attrib-starts': [('generate_guess|0|',
                            30)],
         'code-line': '    for letter in guess:\n',
         'first-line': 52L,
         'folded-linenos': [],
         'sel-line': 68L,
         'sel-line-start': 2493L,
         'selection_end': 2886L,
         'selection_start': 2493L,
         'zoom': 0L},
        1696368825.3357],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.isInPos|0|',
                             44)],
          'code-line': '            self.minCount += 1\n',
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 52L,
          'sel-line-start': 1480L,
          'selection_end': 1510L,
          'selection_start': 1510L,
          'zoom': 0L},
         1696368874.897873],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('generate_guess|0|',
                             30)],
          'code-line': '    for letter in guess:\n',
          'first-line': 52L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2493L,
          'selection_end': 2886L,
          'selection_start': 2493L,
          'zoom': 0L},
         1696368994.418044],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.officiateCountToBe|0|',
                             59)],
          'code-line': '                print("Pos: " + str(pos))',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 66L,
          'sel-line-start': 1894L,
          'selection_end': 1910L,
          'selection_start': 1910L,
          'zoom': 0L},
         1696369170.723791],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('generate_guess|0|',
                             30)],
          'code-line': '    for letter in guess:\n',
          'first-line': 52L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2493L,
          'selection_end': 2886L,
          'selection_start': 2493L,
          'zoom': 0L},
         1696369220.418151],
        [loc('../ReverseWordle/Playground.py'),
         {'attrib-starts': [],
          'code-line': 'print(myList)',
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 34L,
          'sel-line-start': 819L,
          'selection_end': 832L,
          'selection_start': 832L,
          'zoom': 0L},
         1696369221.489491],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.officiateCountToBe|0|',
                             59)],
          'code-line': '                #print("Pos: " + str(pos))',
          'first-line': 49L,
          'folded-linenos': [],
          'sel-line': 66L,
          'sel-line-start': 1897L,
          'selection_end': 1939L,
          'selection_start': 1939L,
          'zoom': 0L},
         1696369247.833509],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('generate_guess|0|',
                             30)],
          'code-line': '    for letter in guess:\n',
          'first-line': 52L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2493L,
          'selection_end': 2886L,
          'selection_start': 2493L,
          'zoom': 0L},
         1696369521.246604],
        [loc('../ReverseWordle/CPU.py'),
         {'attrib-starts': [('learnFrom|0|',
                             48)],
          'code-line': '            if guess.count(guess[i]) > 0:\n',
          'first-line': 26L,
          'folded-linenos': [],
          'sel-line': 60L,
          'sel-line-start': 1497L,
          'selection_end': 1537L,
          'selection_start': 1537L,
          'zoom': 0L},
         1696369591.521142],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.officiateCountToBe|0|',
                             59)],
          'code-line': '                #print("Pos: " + str(pos))',
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 66L,
          'sel-line-start': 1897L,
          'selection_end': 1939L,
          'selection_start': 1939L,
          'zoom': 0L},
         1696369816.221727],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('generate_guess|0|',
                             30)],
          'code-line': '    for letter in guess:\n',
          'first-line': 61L,
          'folded-linenos': [],
          'sel-line': 68L,
          'sel-line-start': 2493L,
          'selection_end': 2886L,
          'selection_start': 2493L,
          'zoom': 0L},
         1696387783.357551],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.couldBe|0|',
                             14)],
          'code-line': '                return False\n',
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 867L,
          'selection_end': 895L,
          'selection_start': 895L,
          'zoom': 0L},
         1696387831.922691],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('play_again|0|',
                             76)],
          'code-line': '    \n',
          'first-line': 72L,
          'folded-linenos': [],
          'sel-line': 82L,
          'sel-line-start': 3074L,
          'selection_end': 3078L,
          'selection_start': 3078L,
          'zoom': 0L},
         1696388316.934597],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.clearMemory|0|',
                             14)],
          'code-line': '        self.knowCount = False\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 409L,
          'selection_end': 439L,
          'selection_start': 439L,
          'zoom': 0L},
         1696388470.229495],
        [loc('../ReverseWordle/CPU.py'),
         {'attrib-starts': [('clearMemory|0|',
                             34)],
          'code-line': '        fact.clearMemory()\n',
          'first-line': 26L,
          'folded-linenos': [],
          'sel-line': 36L,
          'sel-line-start': 868L,
          'selection_end': 894L,
          'selection_start': 894L,
          'zoom': 0L},
         1696388695.543184],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('play_again|0|',
                             77)],
          'code-line': '    for myList in guess_labels_array:\n',
          'first-line': 70L,
          'folded-linenos': [],
          'sel-line': 81L,
          'sel-line-start': 3032L,
          'selection_end': 3069L,
          'selection_start': 3069L,
          'zoom': 0L},
         1696390628.141203],
        [loc('../TkinterNotes/ImageApp.py'),
         {'attrib-starts': [],
          'code-line': 'from PIL import ImageTk, Image\n',
          'first-line': 7L,
          'folded-linenos': [],
          'sel-line': 1L,
          'sel-line-start': 22L,
          'selection_end': 52L,
          'selection_start': 52L,
          'zoom': 0L},
         1696390639.174805],
        [loc('../ReverseWordle/ReverseWordle.py'),
         {'attrib-starts': [('play_again|0|',
                             77)],
          'code-line': '    for myList in guess_labels_array:\n',
          'first-line': 70L,
          'folded-linenos': [],
          'sel-line': 81L,
          'sel-line-start': 3032L,
          'selection_end': 3069L,
          'selection_start': 3069L,
          'zoom': 0L},
         1696390654.300761],
        [loc('../MarchMadnessGenerator.py'),
         {'attrib-starts': [('predict_winner|0|',
                             7)],
          'code-line': '    return favorite\n',
          'first-line': 1L,
          'folded-linenos': [],
          'sel-line': 21L,
          'sel-line-start': 531L,
          'selection_end': 535L,
          'selection_start': 535L,
          'zoom': 0L},
         1696390663.907501],
        [loc('../ReverseWordle/Fact.py'),
         {'attrib-starts': [('Fact|0|',
                             0),
                            ('Fact|0|.clearMemory|0|',
                             14)],
          'code-line': '        self.knowCount = False\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 19L,
          'sel-line-start': 409L,
          'selection_end': 439L,
          'selection_start': 439L,
          'zoom': 0L},
         1696390679.755731]],
        20),
        'current-loc': loc('../ReverseWordle/ReverseWordle.py'),
        'editor-state-list': [(loc('../ReverseWordle/CPU.py'),
                               {'attrib-starts': [('clearMemory|0|',
        34)],
                                'code-line': '        fact.clearMemory()\n',
                                'first-line': 26L,
                                'folded-linenos': [],
                                'sel-line': 36L,
                                'sel-line-start': 868L,
                                'selection_end': 894L,
                                'selection_start': 894L,
                                'zoom': 0L}),
                              (loc('../ReverseWordle/Fact.py'),
                               {'attrib-starts': [('Fact|0|',
        0),
        ('Fact|0|.clearMemory|0|',
         14)],
                                'code-line': '        self.knowCount = False'\
        '\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 19L,
                                'sel-line-start': 409L,
                                'selection_end': 439L,
                                'selection_start': 439L,
                                'zoom': 0L}),
                              (loc('../MarchMadnessGenerator.py'),
                               {'attrib-starts': [('predict_winner|0|',
        7)],
                                'code-line': '    return favorite\n',
                                'first-line': 1L,
                                'folded-linenos': [],
                                'sel-line': 21L,
                                'sel-line-start': 531L,
                                'selection_end': 535L,
                                'selection_start': 535L,
                                'zoom': 0L}),
                              (loc('../ReverseWordle/Playground.py'),
                               {'attrib-starts': [],
                                'code-line': 'print(myList)',
                                'first-line': 18L,
                                'folded-linenos': [],
                                'sel-line': 34L,
                                'sel-line-start': 819L,
                                'selection_end': 832L,
                                'selection_start': 832L,
                                'zoom': 0L}),
                              (loc('../ReverseWordle/ReverseWordle.py'),
                               {'attrib-starts': [('play_again|0|',
        77)],
                                'code-line': '    enter_word_label.config(te'\
        'xt="Enter Word for Me to Guess")\n',
                                'first-line': 70L,
                                'folded-linenos': [],
                                'sel-line': 87L,
                                'sel-line-start': 3201L,
                                'selection_end': 3234L,
                                'selection_start': 3234L,
                                'zoom': 0L}),
                              (loc('../StringOrders.py'),
                               {'attrib-starts': [('allOrders|0|',
        5)],
                                'code-line': '                orders.append('\
        'newOrder)\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 14L,
                                'sel-line-start': 345L,
                                'selection_end': 384L,
                                'selection_start': 384L,
                                'zoom': 0L}),
                              (loc('../Wordle.py'),
                               {'attrib-starts': [('submit|0|',
        55)],
                                'code-line': '                    elif guess'\
        '[j] == guess[i] and guess[j] == answer[j]:\n',
                                'first-line': 107L,
                                'folded-linenos': [],
                                'sel-line': 120L,
                                'sel-line-start': 4304L,
                                'selection_end': 4354L,
                                'selection_start': 4354L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../ReverseWordle/CPU.py'),
         loc('../ReverseWordle/Fact.py'),
         loc('../MarchMadnessGenerator.py'),
         loc('../ReverseWordle/Playground.py'),
         loc('../ReverseWordle/ReverseWordle.py'),
         loc('../StringOrders.py'),
         loc('../Wordle.py')]),
                               'open_files': [u'../StringOrders.py',
        u'../Wordle.py',
        u'../ReverseWordle/Playground.py',
        u'../ReverseWordle/CPU.py',
        u'../MarchMadnessGenerator.py',
        u'../ReverseWordle/Fact.py',
        u'../ReverseWordle/ReverseWordle.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1696394796.210182),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    3),
                                   1696300817.175383),
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1420,
                         814)}]}
guimgr.recent-documents = [loc('../ReverseWordle/ReverseWordle.py'),
                           loc('../ReverseWordle/Fact.py'),
                           loc('../MarchMadnessGenerator.py'),
                           loc('../ReverseWordle/CPU.py'),
                           loc('../ReverseWordle/Playground.py'),
                           loc('../Wordle.py'),
                           loc('../StringOrders.py')]
guimgr.visual-state = {loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/decoder.py'): {'a'\
        'ttrib-starts': [('JSONDecoder|0|',
                          253),
                         ('JSONDecoder|0|.raw_decode|0|',
                          342)],
        'code-line': '            raise JSONDecodeError("Expecting value", s'\
                     ', err.value) from None\n',
        'first-line': 155L,
        'folded-linenos': [],
        'sel-line': 354L,
        'sel-line-start': 12371L,
        'selection_end': 12371L,
        'selection_start': 12371L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/posixpath.py'): {'a'\
        'ttrib-starts': [('splitext|0|',
                          45)],
        'code-line': '    p = os.fspath(p)\n',
        'first-line': 92L,
        'folded-linenos': [],
        'sel-line': 117L,
        'sel-line-start': 3815L,
        'selection_end': 3815L,
        'selection_start': 3815L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open|0|',
                          2853)],
        'code-line': '    raise UnidentifiedImageError(\n',
        'first-line': 2934L,
        'folded-linenos': [],
        'sel-line': 2957L,
        'sel-line-start': 100292L,
        'selection_end': 100292L,
        'selection_start': 100292L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/PIL/JpegImagePlugin.py'): {'a'\
        'ttrib-starts': [('_save|0|',
                          606)],
        'code-line': '        raise OSError(f"cannot write mode {im.mode} as'\
                     ' JPEG") from e\n',
        'first-line': 597L,
        'folded-linenos': [],
        'sel-line': 611L,
        'sel-line-start': 21095L,
        'selection_end': 21095L,
        'selection_start': 21095L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/enchant/_enchant.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    raise ImportError(msg)\n',
        'first-line': 135L,
        'folded-linenos': [],
        'sel-line': 156L,
        'sel-line-start': 5018L,
        'selection_end': 5018L,
        'selection_start': 5018L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/googleapiclient/http.py'): {'a'\
        'ttrib-starts': [('HttpRequest|0|',
                          822),
                         ('HttpRequest|0|.execute|0|',
                          876)],
        'code-line': '            raise HttpError(resp, content, uri=self.ur'\
                     'i)\n',
        'first-line': 894L,
        'folded-linenos': [],
        'sel-line': 937L,
        'sel-line-start': 31615L,
        'selection_end': 31615L,
        'selection_start': 31615L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/pafy/pafy.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '        raise ImportError(\n',
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 50L,
        'sel-line-start': 1267L,
        'selection_end': 1267L,
        'selection_start': 1267L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/requests/api.py'): {'a'\
        'ttrib-starts': [('request|0|',
                          15)],
        'code-line': '        return session.request(method=method, url=url,'\
                     ' **kwargs)\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 60L,
        'sel-line-start': 3064L,
        'selection_end': 3064L,
        'selection_start': 3064L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/spotipy/client.py'): {'a'\
        'ttrib-starts': [('Spotify|0|',
                          22),
                         ('Spotify|0|._internal_call|0|',
                          242)],
        'code-line': '            raise SpotifyException(\n',
        'first-line': 440L,
        'folded-linenos': [],
        'sel-line': 292L,
        'sel-line-start': 9547L,
        'selection_end': 9547L,
        'selection_start': 9547L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('Button|0|',
                          2623)],
        'code-line': 'class Button(Widget):\n',
        'first-line': 2602L,
        'folded-linenos': [],
        'sel-line': 2623L,
        'sel-line-start': 95291L,
        'selection_end': 95303L,
        'selection_start': 95297L,
        'zoom': 0L},
                       loc('../../../../../Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/urllib/request.py'): {'a'\
        'ttrib-starts': [('HTTPDefaultErrorHandler|0|',
                          83),
                         ('HTTPDefaultErrorHandler|0|.http_error_default|0|',
                          639)],
        'code-line': '        raise HTTPError(req.full_url, code, msg, hdrs,'\
                     ' fp)\n',
        'first-line': 616L,
        'folded-linenos': [],
        'sel-line': 640L,
        'sel-line-start': 22176L,
        'selection_end': 22176L,
        'selection_start': 22176L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/Algorithms.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'print(quicksort([3,7,8,5,2,1,9,5,4]))',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 355L,
        'selection_end': 392L,
        'selection_start': 392L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/Category.java'): {'a'\
        'ttrib-starts': [],
        'code-line': '    \n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 31L,
        'selection_end': 35L,
        'selection_start': 35L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/Jeopardy.java'): {'a'\
        'ttrib-starts': [],
        'code-line': '    \n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 26L,
        'selection_end': 30L,
        'selection_start': 30L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/Playground.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import Card\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 378L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/PokerCalculator.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/PokerGame.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/Question.java'): {'a'\
        'ttrib-starts': [],
        'code-line': 'public class Question {\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../JavaProjects/Jeopardy!/Wordle.py'): {'attr'\
        'ib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AnagramDict.py'): {'attrib-starts': [('filter'\
        '_words|0|',
        43)],
        'code-line': '        if dictionary.check(w) and w not in words:\n',
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1159L,
        'selection_end': 1189L,
        'selection_start': 1188L,
        'zoom': 0L},
                       loc('../CodifyWord.py'): {'attrib-starts': [],
        'code-line': 'print(encode(password, key))',
        'first-line': 103L,
        'folded-linenos': [],
        'sel-line': 117L,
        'sel-line-start': 4206L,
        'selection_end': 4214L,
        'selection_start': 4214L,
        'zoom': 0L},
                       loc('../DecodifyWord.py'): {'attrib-starts': [],
        'code-line': '        decryption += str(int(int(encryption[i]) - str'\
                     'ing.ascii_lowercase.index(key[index])) % 10)\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 892L,
        'selection_end': 936L,
        'selection_start': 936L,
        'zoom': 0L},
                       loc('../Hebrew.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../Hebrew/Reading_Writing.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../ImageManipulation.py'): {'attrib-starts': [],
        'code-line': "print(os.listdir('.'))\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 110L,
        'selection_end': 132L,
        'selection_start': 132L,
        'zoom': 0L},
                       loc('../MarchMadnessGenerator.py'): {'attrib-starts': [('p'\
        'redict_winner|0|',
        7)],
        'code-line': '    return favorite\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 531L,
        'selection_end': 535L,
        'selection_start': 535L,
        'zoom': 0L},
                       loc('../Playground.py'): {'attrib-starts': [],
        'code-line': 'import sqlite3\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/CPU.py'): {'attr'\
        'ib-starts': [('CPU|0|',
                       2)],
        'code-line': '    isCPU = True',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 51L,
        'selection_end': 67L,
        'selection_start': 67L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/CalcDatabaseBuilder.py'): {'a'\
        'ttrib-starts': [('matchSizes|0|',
                          62)],
        'code-line': 'def matchSizes(image, tld):\n',
        'first-line': 47L,
        'folded-linenos': [],
        'sel-line': 62L,
        'sel-line-start': 3008L,
        'selection_end': 3035L,
        'selection_start': 3035L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/Card.py'): {'att'\
        'rib-starts': [('Card|0|',
                        3),
                       ('Card|0|.__init__|0|',
                        8)],
        'code-line': '        self.suit = suit\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 148L,
        'selection_end': 172L,
        'selection_start': 172L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/Player.py'): {'a'\
        'ttrib-starts': [('Player|0|',
                          4),
                         ('Player|0|.createChipImage|0|',
                          43)],
        'code-line': '        chip_image = PIL.ImageTk.PhotoImage(PIL.Image.'\
                     'open("poker_chips.png"))\n',
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 46L,
        'sel-line-start': 1377L,
        'selection_end': 1415L,
        'selection_start': 1415L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/Playground.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'print(myList[1:])',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 25L,
        'selection_end': 42L,
        'selection_start': 42L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/Poker.py'): {'at'\
        'trib-starts': [('nextHand|0|',
                         109)],
        'code-line': '        pass\n',
        'first-line': 119L,
        'folded-linenos': [],
        'sel-line': 137L,
        'sel-line-start': 4650L,
        'selection_end': 4662L,
        'selection_start': 4662L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/PokerCalculator.py'): {'a'\
        'ttrib-starts': [('randomThreeCardHand|0|',
                          374)],
        'code-line': '    return threeHandCombination\n',
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 388L,
        'sel-line-start': 13675L,
        'selection_end': 13706L,
        'selection_start': 13706L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/PokerGame.py'): {'a'\
        'ttrib-starts': [('Game|0|',
                          4),
                         ('Game|0|.endRound|0|',
                          95)],
        'code-line': '            return 3 \n',
        'first-line': 146L,
        'folded-linenos': [],
        'sel-line': 110L,
        'sel-line-start': 3346L,
        'selection_end': 3367L,
        'selection_start': 3367L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/PokerSimulator.py'): {'a'\
        'ttrib-starts': [('calculate_odds_of_winning|0|',
                          211)],
        'code-line': '    num_opponents_drop = OptionMenu(root, num_opponent'\
                     's, *list(range(1,9)))\n',
        'first-line': 61L,
        'folded-linenos': [],
        'sel-line': 252L,
        'sel-line-start': 10567L,
        'selection_end': 10642L,
        'selection_start': 10592L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/PokerSimulatorTest.py'): {'a'\
        'ttrib-starts': [('testHasAPairEfficiency|0|',
                          307)],
        'code-line': '    hand = randomFiveCardHand([])\n',
        'first-line': 285L,
        'folded-linenos': [],
        'sel-line': 308L,
        'sel-line-start': 23894L,
        'selection_end': 23926L,
        'selection_start': 23926L,
        'zoom': 0L},
                       loc('../Poker Probability Calculator/User.py'): {'att'\
        'rib-starts': [],
        'code-line': 'from Player import Player\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 60L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('Card.py'): {'attrib-starts': [],
        'code-line': 'import PIL.Image\n',
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('Player.py'): {'attrib-starts': [('Player|0|',
        5)],
        'code-line': '    order = 0\n',
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 115L,
        'selection_end': 128L,
        'selection_start': 128L,
        'zoom': 0L},
                       loc('Playground.py'): {'attrib-starts': [],
        'code-line': 'print(number[-6:])',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 21L,
        'selection_end': 36L,
        'selection_start': 36L,
        'zoom': 0L},
                       loc('Poker.py'): {'attrib-starts': [('minusRaiseBet|0'\
        '|',
        110)],
        'code-line': "    if toInt(amount_betting_label.cget('text'))-game.b"\
                     "lind <= max(game.blind, game.betAmount):\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 4362L,
        'selection_end': 4409L,
        'selection_start': 4409L,
        'zoom': 0L},
                       loc('PokerCalculator.py'): {'attrib-starts': [('handV'\
        'alue|0|',
        120)],
        'code-line': '        value += max(extraCards)/100\n',
        'first-line': 138L,
        'folded-linenos': [],
        'sel-line': 182L,
        'sel-line-start': 5720L,
        'selection_end': 5756L,
        'selection_start': 5756L,
        'zoom': 0L},
                       loc('PokerGame.py'): {'attrib-starts': [('Game|0|',
        4),
        ('Game|0|.raiseBet|0|',
         227)],
        'code-line': '        self.betAmount = amount\n',
        'first-line': 210L,
        'folded-linenos': [],
        'sel-line': 228L,
        'sel-line-start': 7072L,
        'selection_end': 7103L,
        'selection_start': 7103L,
        'zoom': 0L},
                       loc('../Post_It_Notes.py'): {'attrib-starts': [('add_'\
        'notes|0|',
        132)],
        'code-line': '    new_note = Toplevel()\n',
        'first-line': 112L,
        'folded-linenos': [],
        'sel-line': 135L,
        'sel-line-start': 4656L,
        'selection_end': 4679L,
        'selection_start': 4671L,
        'zoom': 0L},
                       loc('../Python Spotify/.env'): {'attrib-starts': [],
        'code-line': 'client_secret = "6e8ad7e4902a4b7987c799b44a5bf6c0"',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 47L,
        'selection_end': 97L,
        'selection_start': 97L,
        'zoom': 0L},
                       loc('../Python Spotify/Music_Player.py'): {'attrib-st'\
        'arts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../Python Spotify/Spotify_Player.py'): {'attrib-'\
        'starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../Python Spotify/env.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../RedditBot.py'): {'attrib-starts': [],
        'code-line': 'import os\n',
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../SQL3_Notes.py'): {'attrib-starts': [],
        'code-line': "c.execute(\"SELECT * FROM employees WHERE last=:last\""\
                     ", {'last':'Drayton'})\n",
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 32L,
        'sel-line-start': 657L,
        'selection_end': 729L,
        'selection_start': 711L,
        'zoom': 0L},
                       loc('../SQL_Terminal.py'): {'attrib-starts': [],
        'code-line': 'import cx_Oracle\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 36L,
        'selection_end': 52L,
        'selection_start': 52L,
        'zoom': 0L},
                       loc('../SQLite3Notes/database.py'): {'attrib-starts': [],
        'code-line': '#curs.execute("DROP TABLE customers")\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 52L,
        'sel-line-start': 1570L,
        'selection_end': 1607L,
        'selection_start': 1607L,
        'zoom': 0L},
                       loc('../SQLite3Notes/our_app.py'): {'attrib-starts': [],
        'code-line': 'import database\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../SalaryCalculator.py'): {'attrib-starts': [],
        'code-line': 'hourly = int(input())\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../SchoolProjects/Picture_editor.py'): {'attrib-'\
        'starts': [],
        'code-line': '# The purpose of this program is to add detail to pict'\
                     'ures, including:\n',
        'first-line': 34L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../SongLyrics.py'): {'attrib-starts': [('findLyr'\
        'ics|0|',
        23)],
        'code-line': '    lyricStart = code.find("<div class=\\"ringtone\\">'\
                     '")\n',
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 787L,
        'selection_end': 841L,
        'selection_start': 841L,
        'zoom': 0L},
                       loc('../Spotify_Player.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../StringOrders.py'): {'attrib-starts': [('allOr'\
        'ders|0|',
        5)],
        'code-line': '                orders.append(newOrder)\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 345L,
        'selection_end': 384L,
        'selection_start': 384L,
        'zoom': 0L},
                       loc('../Timer/timer.py'): {'attrib-starts': [],
        'code-line': 'from tkinter import *\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TkinterNotes/ImageApp.py'): {'attrib-starts': [],
        'code-line': 'from PIL import ImageTk, Image\n',
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 22L,
        'selection_end': 52L,
        'selection_start': 52L,
        'zoom': 0L},
                       loc('../TkinterNotes/Playground.py'): {'attrib-starts': [],
        'code-line': 'nums = "0123456789"\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TkinterNotes/PostItNotes.py'): {'attrib-start'\
        's': [],
        'code-line': 'root = Tk()\n',
        'first-line': 79L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 38L,
        'selection_end': 49L,
        'selection_start': 38L,
        'zoom': 0L},
                       loc('../TkinterNotes/Random_Wikipedia_Article.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from tkinter import *\n',
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TkinterNotes/RedditBot_Tkinter.py'): {'attrib'\
        '-starts': [],
        'code-line': 'from tkinter import *\n',
        'first-line': 161L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../Wordle.py'): {'attrib-starts': [],
        'code-line': 'score_label = Label(root, text="Score: " + str(score))'\
                     '\n',
        'first-line': 186L,
        'folded-linenos': [],
        'sel-line': 201L,
        'sel-line-start': 7742L,
        'selection_end': 7747L,
        'selection_start': 7742L,
        'zoom': 0L},
                       loc('../countries.py'): {'attrib-starts': [],
        'code-line': 'p_wiki = wiki.page("List of Countries")\n',
        'first-line': 200L,
        'folded-linenos': [],
        'sel-line': 221L,
        'sel-line-start': 6270L,
        'selection_end': 6307L,
        'selection_start': 6307L,
        'zoom': 0L},
                       loc('../employee.py'): {'attrib-starts': [('Employee|'\
        '0|',
        0)],
        'code-line': 'class Employee:\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../myJokes.py'): {'attrib-starts': [],
        'code-line': 'from jokeapi import Jokes\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
search.search-history = [u'self.poss',
                         u'Entry',
                         u'minus',
                         u'game.blind',
                         u'raiseBet',
                         u'self.blind',
                         u'+self.blind',
                         u'+game.blind',
                         u'submitRaisedBet',
                         u'str(',
                         u'minusRai',
                         u'nextTurn',
                         u'getPlayerWithOrder',
                         u'endRound',
                         u'limp_button',
                         u'limp_',
                         u'hand_winn',
                         u'bet_button',
                         u'bet',
                         u'strength_label']
